FROM phusion/baseimage:latest
MAINTAINER Feel++ Support <support@feelpp.org>

ENV NJOBS 16

# Install build environment
RUN apt-add-repository ppa:ubuntu-toolchain-r/ppa #'deb http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu trusty main'
#RUN apt-add-repository 'deb http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu trusty main'
#RUN apt-add-repository 'deb http://llvm.org/apt/trusty/ llvm-toolchain-trusty-3.7 main'

RUN apt-get -qq update && \
    apt-get -y --force-yes install \
    	 xauth cmake flex g++-4.9 clang-3.6 gfortran git ipython openmpi-bin pkg-config \
         wget bison sudo \
         automake autoconf libtool \
         libcln-dev libcppunit-dev libopenblas-dev liblapack-dev \
         libeigen3-dev \
         libopenmpi-dev \
         libeigen3-dev \
         xterm tmux screen \
         python-dev libbz2-dev \
         libphonon-dev libphonon4 qt4-dev-tools libqt4-core libqt4-gui qt4-qmake libxt-dev libqt4-opengl-dev mesa-common-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# C++
ENV CXX clang++-3.6
ENV CC clang-3.6
ENV FEELPP_DEP_INSTALL_PREFIX /usr/local

WORKDIR /tmp

# Boost
ENV BOOST_VERSION 1.61.0
ENV BOOST_DIR boost_1_61_0
RUN wget http://sourceforge.net/projects/boost/files/boost/${BOOST_VERSION}/${BOOST_DIR}.tar.bz2/download -O ${BOOST_DIR}.tar.bz2 && tar xjf ${BOOST_DIR}.tar.bz2

WORKDIR /tmp/${BOOST_DIR}
RUN echo "using mpi ;" >> user-config.jam && echo "" >> user-config.jam
RUN ./bootstrap.sh
RUN ./bjam -j${NJOBS} install \
      --layout=tagged \
      --prefix=${FEELPP_DEP_INSTALL_PREFIX} \
      --user-config=user-config.jam \
      variant=release \
      threading=multi \
      link=shared

# Gmsh
# check to see if protobuf folder is empty
ENV GMSH_VERSION 2.11.0

WORKDIR /tmp
RUN wget http://www.geuz.org/gmsh/src/gmsh-${GMSH_VERSION}-source.tgz && tar xvzf gmsh-${GMSH_VERSION}-source.tgz && mkdir -p gmsh-${GMSH_VERSION}-source/build
WORKDIR /tmp/gmsh-${GMSH_VERSION}-source/build
RUN cmake \
    -DCMAKE_CXX_COMPILER=${CXX} \
    -DCMAKE_C_COMPILER=${CC} \
    -DCMAKE_INSTALL_PREFIX=${FEELPP_DEP_INSTALL_PREFIX} \
    -DCMAKE_BUILD_TYPE=release \
    -DENABLE_BUILD_LIB=ON \
    -DENABLE_BUILD_SHARED=ON \
    -DENABLE_BUILD_DYNAMIC=ON \
    -DENABLE_MPI=OFF \
    -DENABLE_MUMPS=OFF \
    -DENABLE_OPENMP=ON  \
    ..
RUN make -j${NJOBS}
RUN make install

# ParaView
ENV PARAVIEW_VERSION 5.0.1
WORKDIR /tmp
RUN wget "http://www.paraview.org/paraview-downloads/download.php?submit=Download&version=v5.0&type=source&os=all&downloadFile=ParaView-v${PARAVIEW_VERSION}-source.tar.gz" -O ParaView-v${PARAVIEW_VERSION}-source.tar.gz && tar xvzf ParaView-v${PARAVIEW_VERSION}-source.tar.gz && mkdir -p ParaView-v${PARAVIEW_VERSION}-source/build
WORKDIR /tmp/ParaView-v${PARAVIEW_VERSION}-source/build
RUN cmake \
    -DBUILD_TESTING=OFF \
    -DCMAKE_CXX_COMPILER=${CXX} \
    -DCMAKE_C_COMPILER=${CC} \
    -DCMAKE_INSTALL_PREFIX=${FEELPP_DEP_INSTALL_PREFIX} \
    -DCMAKE_BUILD_TYPE=Release \
    -DPARAVIEW_BUILD_QT_GUI=ON \
    -DPARAVIEW_ENABLE_CATALYST=ON \
    -DPARAVIEW_ENABLE_PYTHON=ON \
    -DPARAVIEW_INSTALL_DEVELOPMENT_FILES=ON \
    -DPARAVIEW_USE_MPI=ON \
    -DVTK_RENDERING_BACKEND=OpenGL \
    ..
RUN make -j${NJOBS}
RUN make install

# Cleanup /tmp
RUN rm -rf /tmp/*

# Set up user so that we do not run as root
# Changing the password does not work on certain OS and is not needed
# echo "feelpp:docker" | chpasswd && \
RUN useradd -m -s /bin/bash -G sudo,docker_env feelpp && \
    echo "feelpp ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

# See https://github.com/phusion/baseimage-docker/issues/186
RUN touch /etc/service/syslog-forwarder/down

ENV HOME /home/feelpp

# Our helper script
COPY feelpp.env.sh $HOME/feelpp.env.sh
# and the README
COPY WELCOME $HOME/WELCOME
RUN chown feelpp:feelpp $HOME/WELCOME && \
    chown feelpp:feelpp $HOME/feelpp.env.sh && \
    chmod u+rw $HOME/WELCOME && \
    chmod u+rw $HOME/feelpp.env.sh

# OpenBLAS threads should be 1 to ensure performance
RUN echo "export OPENBLAS_NUM_THREADS=1" >> $HOME/.bashrc && \
    echo "export OPENBLAS_VERBOSE=0" >> $HOME/.bashrc

# This makes sure we launch with ENTRYPOINT /bin/bash into the home directory
RUN echo "export FEELPP_DEP_INSTALL_PREFIX=${FEELPP_DEP_INSTALL_PREFIX}" >> $HOME/.bashrc && \
    echo "export CC=$CC" >> $HOME/.bashrc && \
    echo "export CXX=$CXX" >> $HOME/.bashrc && \
    echo "source $HOME/feelpp.env.sh" >> $HOME/.bashrc && \
    echo "cd $HOME" >> $HOME/.bashrc && \
    echo "cat $HOME/WELCOME" >> $HOME/.bashrc

ENTRYPOINT ["/sbin/my_init","--quiet","--","sudo","-u","feelpp","/bin/sh","-c"]
CMD ["/bin/bash"]
